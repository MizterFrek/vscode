{
  "$schema": "https://json-schema.org/draft-07/schema",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "id",
    "label",
    "mainFile"
  ],
  "properties": {
    "$schema": {
      "type": "string"
    },
    "id": {
      "description": "Required, stable, dasherized and unique schematic identifier used for configuration (example: \"mycompany-angular-component\").",
      "type": "string",
      "minLength": 1
    },
    "label": {
      "description": "Required human readable name of the schematic (example: \"Component\").",
      "type": "string",
      "minLength": 1
    },
    "collection": {
      "description": "Recommended human readable name of the collection in which to include this schematic (example: \"Angular\").",
      "type": "string",
      "minLength": 1
    },
    "mainFile": {
      "description": "Required: which file will be opened if the generation succeeds? Must be the exact file name that is in \"files\" folder(example: \"{{fileName}}.ts.hbs\")",
      "type": "string",
      "minLength": 1
    },
    "description": {
      "description": "Optional human readable short description of the purpose of the code generated by this schematic, which will be directly visible below the schematic label.",
      "type": "string"
    },
    "tooltipDescription": {
      "description": "Optional human readable longer description of the schematic, displayed when the user click on the \"?\" icon.",
      "type": "string"
    },
    "dependenciesRequired": {
      "description": "Optional dependencies required to enable this schematic (example: [\"typescript\", { packageName: \"@angular/core\", versionRange: \">=15.0.0\" }]).",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "oneOf": [
          {
            "type": "string",
            "minLength": 1
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "packageName",
              "versionRange"
            ],
            "properties": {
              "packageName": {
                "type": "string",
                "minLength": 1
              },
              "versionRange": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "pathSubfolder": {
      "description": "Optional: should the new files be generated directly inside the destination path (example: /path/to/hello-world.component.ts), which is the default, or inside a folder (example: path/to/hello-world/hello-world.component.ts), which is often a better option when multiple files are generated?",
      "type": "boolean",
      "default": false
    },
    "suffix": {
      "description": "Optional lowercased suffix for file and class names (example: \"component\" will result in hello-world.component file name and HelloWorldComponent class name).",
      "type": "string"
    },
    "features": {
      "description": "Optional list of special features enabled for this schematic. Refer to the documentation for their meaning.",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "pathSubfolderUserOption",
          "exportableInEntryFile",
          "angular",
          "angularAddToModuleDeclarations",
          "angularEslintComponentSuffix",
          "angularAddComponentRoute",
          "angularImportsInsideComponent",
          "angularImportGeneratedModuleIntoOtherModules",
          "angularImportLazyModuleIntoOtherRoutingModule",
          "angularInjectInConstructor",
          "angularAddInterceptorProvider",
          "angularSelectorCamelCase",
          "angularSelectorKebabCase",
          "nestAddToModuleControllers",
          "nestAddToModuleProviders"
        ]
      }
    },
    "options": {
      "description": "Optional list of options configurable by the user, name in camelCase, that will be accessible in the schematic templates files (example: \"externalTemplate\").",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "[a-zA-Z]": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "description",
            "type"
          ],
          "properties": {
            "description": {
              "description": "Required human readable description of the option. As there is a display space limit, must be short. If the option is \"required\", the description will be used as prompt, so it should be in the form of a question (example: \"What type of style file do you want?\").",
              "type": "string",
              "minLength": 1
            },
            "type": {
              "description": "Required type authorized for the option value. If \"array\", it will be an array of strings.",
              "type": "string",
              "enum": [
                "string",
                "boolean",
                "array"
              ]
            },
            "required": {
              "description": "Is the option required? If so, it will be automatically asked to the user on generation. Otherwise and by default, the option will be configurable in an optional step before the generation confirmation.",
              "type": "boolean",
              "default": false
            },
            "suggestToSetAsDefault": {
              "description": "If enabled, will propose to the user to set the value chosen as the default for next generations. For now, only works for boolean \"type\" and string \"type\" with \"enum\".",
              "type": "boolean",
              "default": false
            },
            "default": {
              "description": "Optional default value. Must match the option \"type\".",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "enum": {
              "description": "Optional list of autorized values when option \"type\" is string or array.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "enumDescriptions": {
              "description": "Optional descriptions for the \"enum\" values in the same order, or for boolean \"type\" description for true then for false.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}